def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}
def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 28

    lintOptions {
        disable 'InvalidPackage'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        //applicationId "com.example.mobile_app"
        minSdkVersion 21
        targetSdkVersion 28
        //versionCode flutterVersionCode.toInteger()
        //versionName flutterVersionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    flavorDimensions "flavors"

    productFlavors {
        client {
            dimension "flavors"
            applicationId "it.resmedia.taporty.client"
            versionCode flutterVersionCode.toInteger()
            versionName flutterVersionName
        }

        driver {
            dimension "flavors"
            applicationId "it.resmedia.taporty.driver"
            versionCode flutterVersionCode.toInteger()
            versionName flutterVersionName
        }

        control {
            dimension "flavors"
            applicationId "it.resmedia.taporty.control"
            versionCode flutterVersionCode.toInteger()
            versionName flutterVersionName
        }

        restaurant {
            dimension "flavors"
            applicationId "it.resmedia.taporty.restaurant"
            versionCode flutterVersionCode.toInteger()
            versionName flutterVersionName
        }
    }
    
       

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            ndk {
                abiFilters 'armeabi-v7a'
            }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'com.google.firebase:firebase-firestore:19.0.2'
    implementation 'com.android.support:multidex:1.0.3'
}

apply plugin: 'com.google.gms.google-services'